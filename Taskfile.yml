version: '3'

tasks:

  build:
    cmds:
      # compile main
      - clang++ -std=c++11 -stdlib=libc++ -I./glad/include -lglfw3 -ldl -framework CoreVideo -framework OpenGL -framework IOKit -framework Cocoa -framework Carbon ./main.cpp ./glad/src/glad.c -o main

  build:example:
    cmds:
      - clang++ -std=c++11 -stdlib=libc++ -lglfw3 -framework CoreVideo -framework OpenGL -framework IOKit -framework Cocoa -framework Carbon ./example.cpp

  build:test:
    cmds:
      - clang++ -std=c++11 -stdlib=libc++ -I./glad/include -lglfw3 -ldl -framework CoreVideo -framework OpenGL -framework IOKit -framework Cocoa -framework Carbon ./test.cpp ./glad/src/glad.c -o test

  run:
    cmds:
     - ./main

  run:example:
    cmds:
     - ./a.out

  run:test:
    cmds:
     - ./test

  build:glad:
    cmds:
      # compile GLAD library
      - gcc -c glad/src/glad.c -Iglad/include -lglfw3 -ldl -o gl.o

  gen_shader:
    desc: Generate shader string from a .glsl file
    vars:
      shader_file: "{{.CLI_ARGS}}"
    cmds:
      - ./scripts/glsl_to_string.sh "{{.shader_file}}"